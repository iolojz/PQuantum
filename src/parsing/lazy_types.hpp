//
// Created by jayz on 03.02.20.
//

#include "type_rule.hpp"
#include "tree_types.hpp"
#include "type_rules/identifier.hpp"

#include "mathutils/tree_expression/arithmetic.hpp"

#ifndef PQUANTUM_PARSING_LAZY_TYPES_HPP
#define PQUANTUM_PARSING_LAZY_TYPES_HPP

// FIXME: Is there a better way to do this?

#ifdef PQUANTUM_PARSING_ARITHMETIC_TREE_TAG
#error "PQUANTUM_PARSING_ARITHMETIC_TREE_TAG is already defined"
#endif
#define PQUANTUM_PARSING_ARITHMETIC_TREE_TAG \
PQUANTUM_PARSING_TREE_TAG( \
	PQuantum::mathutils::tree_expression::arithmetic_node_traits, \
    PQuantum::parsing::identifier_node_traits \
)

#define PQUANTUM_PARSING_ARITHMETIC_TREE_NODE typename PQUANTUM_PARSING_ARITHMETIC_TREE_TAG::type

#define PQUANTUM_PARSING_ARITHMETIC_PRODUCT_INCARNATION \
PQUANTUM_PARSING_TREE_NODE_INCARNATION(PQUANTUM_PARSING_ARITHMETIC_TREE_TAG, PQuantum::mathutils::tree_expression::product)
#define PQUANTUM_PARSING_ARITHMETIC_QUOTIENT_INCARNATION \
PQUANTUM_PARSING_TREE_NODE_INCARNATION(PQUANTUM_PARSING_ARITHMETIC_TREE_TAG, PQuantum::mathutils::tree_expression::quotient)
#define PQUANTUM_PARSING_ARITHMETIC_SUM_INCARNATION \
PQUANTUM_PARSING_TREE_NODE_INCARNATION(PQUANTUM_PARSING_ARITHMETIC_TREE_TAG, PQuantum::mathutils::tree_expression::sum)
#define PQUANTUM_PARSING_ARITHMETIC_DIFFERENCE_INCARNATION \
PQUANTUM_PARSING_TREE_NODE_INCARNATION(PQUANTUM_PARSING_ARITHMETIC_TREE_TAG, PQuantum::mathutils::tree_expression::difference)
#define PQUANTUM_PARSING_ARITHMETIC_PARENTHESES_INCARNATION \
PQUANTUM_PARSING_TREE_NODE_INCARNATION(PQUANTUM_PARSING_ARITHMETIC_TREE_TAG, PQuantum::mathutils::tree_expression::parentheses)

#define PQUANTUM_PARSING_ARITHMETIC_IDENTIFIER_INCARNATION \
PQUANTUM_PARSING_TREE_NODE_INCARNATION(PQUANTUM_PARSING_ARITHMETIC_TREE_TAG, PQuantum::parsing::identifier)

#endif //PQUANTUM_PARSING_LAZY_TYPES_HPP
