//
// Created by jayz on 03.02.20.
//

#include "lazy_types.hpp"
#include "type_rules/arithmetic.hpp"

#ifndef PQUANTUM_PARSING_LAZY_INSTANTIATIONS_HPP
#define PQUANTUM_PARSING_LAZY_INSTANTIATIONS_HPP

/*
#define PQUANTUM_PARSING_ITERATOR std::string::const_iterator
#define PQUANTUM_PARSING_CONTEXT boost::spirit::x3::phrase_parse_context<boost::spirit::x3::ascii::space_type>::type
*/

PQUANTUM_PARSING_LAZY_TYPE_INSTANTIATE(PQUANTUM_PARSING_ARITHMETIC_PRODUCT_INCARNATION)
PQUANTUM_PARSING_LAZY_TYPE_INSTANTIATE(PQUANTUM_PARSING_ARITHMETIC_QUOTIENT_INCARNATION)
PQUANTUM_PARSING_LAZY_TYPE_INSTANTIATE(PQUANTUM_PARSING_ARITHMETIC_SUM_INCARNATION)
PQUANTUM_PARSING_LAZY_TYPE_INSTANTIATE(PQUANTUM_PARSING_ARITHMETIC_DIFFERENCE_INCARNATION)
PQUANTUM_PARSING_LAZY_TYPE_INSTANTIATE(PQUANTUM_PARSING_ARITHMETIC_PARENTHESES_INCARNATION)
PQUANTUM_PARSING_LAZY_TYPE_INSTANTIATE(PQUANTUM_PARSING_ARITHMETIC_IDENTIFIER_INCARNATION)

#endif //PQUANTUM_PARSING_LAZY_INSTANTIATIONS_HPP
